

--USER profile table is created to store the details of all the users
DROP TABLE IF EXISTS USERS CASCADE;
CREATE TABLE IF NOT EXISTS USERS(id SERIAL,USER_ID VARCHAR(200) NOT NULL,firstName VARCHAR(30) NOT NULL , lastName VARCHAR(30) NOT NULL ,userName VARCHAR(30) UNIQUE NOT NULL,  email VARCHAR(50) UNIQUE NOT NULL ,password VARCHAR(255) NOT NULL, salt VARCHAR(200) NOT NULL ,country VARCHAR(30) ,aboutMe VARCHAR(50),dob VARCHAR(30), role VARCHAR(30),contactNumber VARCHAR(30), PRIMARY KEY (id),image TEXT);


--USER_AUTH table is created to store the login information of all the users
DROP TABLE IF EXISTS USER_AUTH CASCADE;
CREATE TABLE IF NOT EXISTS USER_AUTH(
	ID BIGSERIAL PRIMARY KEY,
	uuid VARCHAR(200) NOT NULL,
	USER_ID INTEGER NOT NULL,
	ACCESS_TOKEN VARCHAR(500) NOT NULL,
	EXPIRES_AT TIMESTAMP NOT NULL,
	LOGIN_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	LOGOUT_AT TIMESTAMP NULL
);

DROP TABLE IF EXISTS EDUCATION CASCADE;
CREATE TABLE IF NOT EXISTS EDUCATION(
	ID BIGSERIAL PRIMARY KEY,
	uuid VARCHAR(200) NOT NULL,
	USER_ID INTEGER NOT NULL,
	SCHOOL_ID INTEGER NOT NULL,
    COLLEGE_ID INTEGER NOT NULL,
    BACHELORS_ID INTEGER NOT NULL,
    POSTGRAD_ID INTEGER NOT NULL
);


DROP TABLE IF EXISTS EDUCATION_SCHOOL CASCADE;
CREATE TABLE IF NOT EXISTS EDUCATION_SCHOOL(
	ID BIGSERIAL PRIMARY KEY,
	uuid VARCHAR(200) NOT NULL,
	USER_ID INTEGER NOT NULL,
	school_name VARCHAR(500) NOT NULL,
	from_date TIMESTAMP NOT NULL,
	to_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	grade VARCHAR(10) NOT NULL
);

DROP TABLE IF EXISTS EDUCATION_COLLEGE CASCADE;
CREATE TABLE IF NOT EXISTS EDUCATION_COLLEGE(
	ID BIGSERIAL PRIMARY KEY,
	uuid VARCHAR(200) NOT NULL,
	USER_ID INTEGER NOT NULL,
	college_name VARCHAR(500) NOT NULL,
	from_date TIMESTAMP NOT NULL,
	to_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	subject VARCHAR(500) NOT NULL,
	grade VARCHAR(10) NOT NULL
);

DROP TABLE IF EXISTS EDUCATION_BACHELORS CASCADE;
CREATE TABLE IF NOT EXISTS EDUCATION_BACHELORS(
	ID BIGSERIAL PRIMARY KEY,
	uuid VARCHAR(200) NOT NULL,
	USER_ID INTEGER NOT NULL,
	bachelors_college_name VARCHAR(500) NOT NULL,
	from_date TIMESTAMP NOT NULL,
	to_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	subject VARCHAR(500) NOT NULL,
	grade VARCHAR(10) NOT NULL
);

DROP TABLE IF EXISTS EDUCATION_POSTGRAD CASCADE;
CREATE TABLE IF NOT EXISTS EDUCATION_POSTGRAD(
	ID BIGSERIAL PRIMARY KEY,
	uuid VARCHAR(200) NOT NULL,
	USER_ID INTEGER NOT NULL,
	postgrad_college_name VARCHAR(500) NOT NULL,
	from_date TIMESTAMP NOT NULL,
	to_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	subject VARCHAR(500) NOT NULL,
	grade VARCHAR(10) NOT NULL
);

ALTER TABLE USER_AUTH ADD CONSTRAINT FK_USER_AUTH_USER_ID FOREIGN KEY(USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE ;


ALTER TABLE EDUCATION_SCHOOL ADD CONSTRAINT FK_EDUCATION_SCHOOL_USER_ID FOREIGN KEY(USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE ;

ALTER TABLE EDUCATION_COLLEGE ADD CONSTRAINT FK_EDUCATION_COLLEGE_USER_ID FOREIGN KEY(USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE ;

ALTER TABLE EDUCATION_BACHELORS ADD CONSTRAINT FK_EDUCATION_BACHELORS_USER_ID FOREIGN KEY(USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE ;


ALTER TABLE EDUCATION_POSTGRAD ADD CONSTRAINT FK_EDUCATION_POSTGRAD_USER_ID FOREIGN KEY(USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE ;

ALTER TABLE EDUCATION ADD CONSTRAINT FK_EDUCATION_USER_ID FOREIGN KEY(USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE ;

ALTER TABLE EDUCATION ADD CONSTRAINT FK_EDUCATION_SCHOOL_ID FOREIGN KEY(SCHOOL_ID) REFERENCES EDUCATION_SCHOOL(ID) ON DELETE CASCADE ;

ALTER TABLE EDUCATION ADD CONSTRAINT FK_EDUCATION_COLLEGE_ID FOREIGN KEY(COLLEGE_ID) REFERENCES EDUCATION_COLLEGE(ID) ON DELETE CASCADE ;

ALTER TABLE EDUCATION ADD CONSTRAINT FK_EDUCATION_BACHELORS_ID FOREIGN KEY(BACHELORS_ID) REFERENCES EDUCATION_BACHELORS(ID) ON DELETE CASCADE ;

ALTER TABLE EDUCATION ADD CONSTRAINT FK_EDUCATION_POSTGRAD_ID FOREIGN KEY(POSTGRAD_ID) REFERENCES EDUCATION_POSTGRAD(ID) ON DELETE CASCADE ;