{
  "swagger": "2.0",
  "info": {
    "title": "Question API",
    "version": "1.0.0",
    "description": "API of School Services"
  },
  "host": "quora.io",
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "API#002 School",
      "description": "All operations marked with 'API#002 School' are relevant to the question use case"
    }
  ],
  "securityDefinitions": {
    "BearerAuthorization": {
      "type": "basic",
      "description": "Bearer authentication (also called token authentication) is an HTTP authentication scheme that involves security tokens called bearer tokens. The name “Bearer authentication” can be understood as “give access to the bearer of this token.”\nThe bearer token is a cryptic string, usually generated by the server in response to a login request. The client must send this token in the Authorization header when making requests to protected resources:\n``` Authorization: Bearer <token>\n```\nSimilarly to Basic authentication, Bearer authentication should only be used over HTTPS (SSL).\nRead https://jwt.io/introduction/ for more information on JWT standard.\n"
    }
  },
  "paths": {
    "/school/create": {
      "x-swagger-router-controller": "api",
      "post": {
        "tags": [
          "API#004 Create School Info"
        ],
        "security": [
          {
            "BearerAuthorization": []
          }
        ],
        "operationId": "createSchoolInfo",
        "summary": "createSchoolInfo",
        "description": "User can add his schoolInfo.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          },
          {
            "in": "body",
            "name": "SchoolRequest",
            "description": "Request containing School information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchoolRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED - School Info created successfully",
            "schema": {
              "$ref": "#/definitions/SchoolResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - user has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    },
    "/school/all": {
      "x-swagger-router-controller": "api",
      "get": {
        "tags": [
          "API#004 Get All School Information"
        ],
        "security": [
          {
            "BearerAuthorization": []
          }
        ],
        "operationId": "getAllSchoolInfo",
        "summary": "getAllSchoolInfo",
        "description": "User can get all School Information.\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - School Info fetched successfully",
            "schema": {
              "$ref": "#/definitions/SchoolInfoDetailsResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - user has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    },
    "/school/edit/{schoolId}": {
      "x-swagger-router-controller": "api",
      "put": {
        "tags": [
          "API#004 Edit a School Info"
        ],
        "security": [
          {
            "BearerAuthorization": []
          }
        ],
        "operationId": "editSchoolInfo",
        "summary": "editSchoolInfo",
        "description": "User can edit the school Info\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          },
          {
            "$ref": "#/parameters/schoolId"
          },
          {
            "in": "body",
            "name": "SchoolInfoEditRequest",
            "description": "Request containing School Info edit information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchoolInfoEditRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Questions changed successfully",
            "schema": {
              "$ref": "#/definitions/SchoolInfoEditResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - user has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    },
    "/school/delete/{schoolId}": {
      "x-swagger-router-controller": "api",
      "delete": {
        "tags": [
          "API#004 Delete a School Info"
        ],
        "security": [
          {
            "BearerAuthorization": []
          }
        ],
        "operationId": "deleteSchoolInfo",
        "summary": "deleteSchoolInfo",
        "description": "Admin or user can delete the question if he has posted the question.\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          },
          {
            "$ref": "#/parameters/schoolId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Questions deleted successfully",
            "schema": {
              "$ref": "#/definitions/SchoolInfoDeleteResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - user has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    },
    "/school/all/{userId}": {
      "x-swagger-router-controller": "api",
      "get": {
        "tags": [
          "API#004 Get the details of all School Info posted by a specific user"
        ],
        "security": [
          {
            "BearerAuthorization": []
          }
        ],
        "operationId": "getAllSchoolInfoByUser",
        "summary": "getAllSchoolInfoByUser",
        "description": "User can get the details of all the school infos posted by a specific user.\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          },
          {
            "$ref": "#/parameters/userId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Fetched the questions successfully",
            "schema": {
              "$ref": "#/definitions/SchoolInfoDetailsResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - user has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "userId": {
      "name": "userId",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "Unique identifier of User in a standard UUID format"
    },
    "schoolId": {
      "name": "schoolId",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "Unique identifier of Question in a standard UUID format"
    },
    "BearerAuthorization": {
      "name": "authorization",
      "type": "string",
      "in": "header",
      "required": true,
      "description": "Mandatory user credentials in bearer http authentication scheme format."
    }
  },
  "definitions": {
    "SchoolRequest": {
      "type": "object",
      "properties": {
        "school_name": {
          "type": "string",
          "description": "name of the school"
        },
        "from_date": {
          "type": "string",
          "description": "from date of the school"
        },
        "to_date": {
          "type": "string",
          "description": "to date of the school"
        },
        "grade": {
          "type": "string",
          "description": "grade in the school"
        }
      },
      "required": [
        "school_name",
        "from_date",
        "to_date",
        "grade"
      ]
    },
    "SchoolResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "school uuid"
        },
        "status": {
          "type": "string",
          "description": "status of the schoolInfo"
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "SchoolInfoDetailsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "school uuid"
        },
        "school_name": {
          "type": "string",
          "description": "name of the school"
        },
        "from_date": {
          "type": "string",
          "description": "from date of the school"
        },
        "to_date": {
          "type": "string",
          "description": "to date of the school"
        },
        "grade": {
          "type": "string",
          "description": "grade in the school"
        }
      },
      "required": [
        "id",
        "school_name",
        "from_date",
        "to_date",
        "grade"
      ]
    },
    "SchoolInfoEditRequest": {
      "type": "object",
      "properties": {
        "school_name": {
          "type": "string",
          "description": "name of the school"
        },
        "from_date": {
          "type": "string",
          "description": "from date of the school"
        },
        "to_date": {
          "type": "string",
          "description": "to date of the school"
        },
        "grade": {
          "type": "string",
          "description": "grade in the school"
        }
      }
    },
    "SchoolInfoEditResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "school Info uuid"
        },
        "status": {
          "type": "string",
          "description": "status of the updated school Info"
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "SchoolInfoDeleteResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "question uuid"
        },
        "status": {
          "type": "string",
          "description": "status of the deleted school Info"
        }
      },
      "required": [
        "id",
        "status"
      ]
    }
  }
}