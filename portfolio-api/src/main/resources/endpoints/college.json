{
  "swagger": "2.0",
  "info": {
    "title": "College API",
    "version": "1.0.0",
    "description": "API of College Services"
  },
  "host": "quora.io",
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "API#003 College",
      "description": "All operations marked with 'API#004 College' are relevant to the question use case"
    }
  ],
  "securityDefinitions": {
    "BearerAuthorization": {
      "type": "basic",
      "description": "Bearer authentication (also called token authentication) is an HTTP authentication scheme that involves security tokens called bearer tokens. The name “Bearer authentication” can be understood as “give access to the bearer of this token.”\nThe bearer token is a cryptic string, usually generated by the server in response to a login request. The client must send this token in the Authorization header when making requests to protected resources:\n``` Authorization: Bearer <token>\n```\nSimilarly to Basic authentication, Bearer authentication should only be used over HTTPS (SSL).\nRead https://jwt.io/introduction/ for more information on JWT standard.\n"
    }
  },
  "paths": {
    "/college/create": {
      "x-swagger-router-controller": "api",
      "post": {
        "tags": [
          "API#004 Create college Info"
        ],
        "security": [
          {
            "BearerAuthorization": []
          }
        ],
        "operationId": "createcollegeInfo",
        "summary": "createcollegeInfo",
        "description": "User can add his collegeInfo.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          },
          {
            "in": "body",
            "name": "collegeRequest",
            "description": "Request containing college information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/collegeRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED - college Info created successfully",
            "schema": {
              "$ref": "#/definitions/collegeResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - user has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    },
    "/college/all": {
      "x-swagger-router-controller": "api",
      "get": {
        "tags": [
          "API#004 Get All college Information"
        ],
        "security": [
          {
            "BearerAuthorization": []
          }
        ],
        "operationId": "getAllcollegeInfo",
        "summary": "getAllcollegeInfo",
        "description": "User can get all college Information.\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - college Info fetched successfully",
            "schema": {
              "$ref": "#/definitions/collegeInfoDetailsResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - user has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    },
    "/college/edit/{collegeId}": {
      "x-swagger-router-controller": "api",
      "put": {
        "tags": [
          "API#004 Edit a college Info"
        ],
        "security": [
          {
            "BearerAuthorization": []
          }
        ],
        "operationId": "editcollegeInfo",
        "summary": "editcollegeInfo",
        "description": "User can edit the college Info\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          },
          {
            "$ref": "#/parameters/collegeId"
          },
          {
            "in": "body",
            "name": "collegeInfoEditRequest",
            "description": "Request containing college Info edit information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/collegeInfoEditRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Questions changed successfully",
            "schema": {
              "$ref": "#/definitions/collegeInfoEditResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - user has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    },
    "/college/delete/{collegeId}": {
      "x-swagger-router-controller": "api",
      "delete": {
        "tags": [
          "API#004 Delete a college Info"
        ],
        "security": [
          {
            "BearerAuthorization": []
          }
        ],
        "operationId": "deletecollegeInfo",
        "summary": "deletecollegeInfo",
        "description": "Admin or user can delete the question if he has posted the question.\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          },
          {
            "$ref": "#/parameters/collegeId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Questions deleted successfully",
            "schema": {
              "$ref": "#/definitions/collegeInfoDeleteResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - user has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    },
    "/college/all/{userId}": {
      "x-swagger-router-controller": "api",
      "get": {
        "tags": [
          "API#004 Get the details of all college Info posted by a specific user"
        ],
        "security": [
          {
            "BearerAuthorization": []
          }
        ],
        "operationId": "getAllcollegeInfoByUser",
        "summary": "getAllcollegeInfoByUser",
        "description": "User can get the details of all the college infos posted by a specific user.\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          },
          {
            "$ref": "#/parameters/userId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Fetched the questions successfully",
            "schema": {
              "$ref": "#/definitions/collegeInfoDetailsResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - user has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "userId": {
      "name": "userId",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "Unique identifier of User in a standard UUID format"
    },
    "collegeId": {
      "name": "collegeId",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "Unique identifier of Question in a standard UUID format"
    },
    "BearerAuthorization": {
      "name": "authorization",
      "type": "string",
      "in": "header",
      "required": true,
      "description": "Mandatory user credentials in bearer http authentication scheme format."
    }
  },
  "definitions": {
    "collegeRequest": {
      "type": "object",
      "properties": {
        "college_name": {
          "type": "string",
          "description": "name of the college"
        },
        "from_date": {
          "type": "string",
          "description": "from date of the college"
        },
        "to_date": {
          "type": "string",
          "description": "to date of the college"
        },
        "grade": {
          "type": "string",
          "description": "grade in the college"
        }
      },
      "required": [
        "college_name",
        "from_date",
        "to_date",
        "grade"
      ]
    },
    "collegeResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "college uuid"
        },
        "status": {
          "type": "string",
          "description": "status of the collegeInfo"
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "collegeInfoDetailsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "college uuid"
        },
        "college_name": {
          "type": "string",
          "description": "name of the college"
        },
        "from_date": {
          "type": "string",
          "description": "from date of the college"
        },
        "to_date": {
          "type": "string",
          "description": "to date of the college"
        },
        "grade": {
          "type": "string",
          "description": "grade in the college"
        }
      },
      "required": [
        "id",
        "college_name",
        "from_date",
        "to_date",
        "grade"
      ]
    },
    "collegeInfoEditRequest": {
      "type": "object",
      "properties": {
        "college_name": {
          "type": "string",
          "description": "name of the college"
        },
        "from_date": {
          "type": "string",
          "description": "from date of the college"
        },
        "to_date": {
          "type": "string",
          "description": "to date of the college"
        },
        "grade": {
          "type": "string",
          "description": "grade in the college"
        }
      }
    },
    "collegeInfoEditResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "college Info uuid"
        },
        "status": {
          "type": "string",
          "description": "status of the updated college Info"
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "collegeInfoDeleteResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "question uuid"
        },
        "status": {
          "type": "string",
          "description": "status of the deleted college Info"
        }
      },
      "required": [
        "id",
        "status"
      ]
    }
  }
}